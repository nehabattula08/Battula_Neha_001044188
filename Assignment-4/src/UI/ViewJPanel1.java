/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import com.toedter.calendar.JTextFieldDateEditor;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.Community;
import model.Encounter;
import model.EncounterHistory;
import model.House;
import model.Patient;
import model.PatientDirectory;


/**
 *
 * @author Neha
 */
public class ViewJPanel1 extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel1
     */
    //Person person1;
    
    
    PatientDirectory patientdirectory;
    public ViewJPanel1(PatientDirectory patientdirectory) {
        
        initComponents();
        //this.person1=person1;
        JTextFieldDateEditor editor = (JTextFieldDateEditor) apptDate.getDateEditor();
        editor.setEditable(false);
        this.patientdirectory=patientdirectory;
        
       populateTable(patientdirectory);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblViewPatients = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtCommunity = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        apptDate = new com.toedter.calendar.JDateChooser();
        btnDelete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 153, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Patients");

        tblViewPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "First Name", "Last Name", "Age", "City", "Appointment Date", "Community", "Pulse Rate", "Blood Pressure", "Temperature"
            }
        ));
        tblViewPatients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewPatientsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblViewPatients);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("City:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Appointment Date:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Community:");

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Select the Patient's row to be updated/deleted");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1162, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(60, 60, 60)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addGap(44, 44, 44)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCommunity)
                                .addComponent(txtCity)
                                .addComponent(apptDate, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnUpdate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete))
                        .addGap(119, 119, 119))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(apptDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnUpdate});

    }// </editor-fold>//GEN-END:initComponents

    private void tblViewPatientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewPatientsMouseClicked
        // TODO add your handling code here:
        
        int rowNumber=tblViewPatients.getSelectedRow();
        Patient patient = patientdirectory.getPatientHistory().get(rowNumber);
        txtCity.setText(tblViewPatients.getModel().getValueAt(rowNumber, 4).toString());
        //apptDate.setDate(tblViewPatients.getModel().getValueAt(rowNumber, 5).);
        java.util.Date mydate= (java.util.Date) (tblViewPatients.getModel().getValueAt(rowNumber, 5));  
        apptDate.setDate(mydate);
        //txtAppointment.setText(tblViewPatients.getModel().getValueAt(rowNumber, 5).toString());
        txtCommunity.setText(tblViewPatients.getModel().getValueAt(rowNumber, 6).toString());
        
        
        
    }//GEN-LAST:event_tblViewPatientsMouseClicked

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
         int rowNumber=tblViewPatients.getSelectedRow();
         int flag=1;
         if(rowNumber<0){
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
        }
         Community community= new Community();
        
        City city = new City(); 
        Patient patientUpdate = new Patient();
       
        House house=new House();
        Encounter encounter = new Encounter();
        EncounterHistory encounterhistory = new EncounterHistory();
         ArrayList<Encounter> encounterList= new ArrayList<>();
        //EncounterHistory encounterHistory=patientUpdate.getEncounterhistory();
//        ArrayList<Encounter> encounterList = patientdirectory.getPatientHistory();
        if((txtCity.getText()==null)|| (txtCity.getText().trim().isEmpty())){
           JOptionPane.showMessageDialog(null,"Please enter a valid city");   
           flag=0;
       }
        
         if((apptDate.getDate()==null)){
           JOptionPane.showMessageDialog(null,"Please enter a valid appointment date");   
           flag=0;
       }
         
           if((txtCommunity.getText()==null)|| (txtCommunity.getText().trim().isEmpty())){
           JOptionPane.showMessageDialog(null,"Please enter a valid community name");   
           flag=0;
       }
          //to update to object 
           if(flag==1){
              
              patientUpdate= patientdirectory.getPatientHistory().get(rowNumber);
              patientUpdate.getHouse().getCity().setCityName(txtCity.getText());
               patientUpdate.getHouse().getCommunity().setCommunityName(txtCommunity.getText());
              
             int index= patientUpdate.getEncounterhistory().getEncounter().size()-1;
//               city.setCityName(txtCity.getText());

//               house.setCity(city);
//               patientUpdate.setHouse(house);
               Encounter currentEncounter = patientUpdate.getEncounterhistory().getEncounter().get(index);
               currentEncounter.setDate(apptDate.getDate());
               //encounterList.set(index, currentEncounter);
//                encounterhistory.setEncounter(encounterList);
                
//                patientUpdate.getEncounterhistory().setEncounter(encounterList);
//               
//               community.setCity(city);
//               community.setCommunityName(txtCommunity.getText());
//               house.setCommunity(community);
//               patientUpdate.setHouse(house);
               
                patientdirectory.getPatientHistory().set(rowNumber, patientUpdate);
                
      
              populateTable(patientdirectory);
               
           }
           
           
       
       
         
         
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
     int rowNumber=tblViewPatients.getSelectedRow();
           int flag=1;
         if(rowNumber<0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
       Patient patientUpdate = new Patient();
        if(flag == 1){
              patientUpdate=patientdirectory.getPatientHistory().remove(rowNumber);
                JOptionPane.showMessageDialog(this, "Patient "+patientUpdate.                   
                        getmedicalRecordNumber()+ " deleted successfully.");
        }
           populateTable(patientdirectory);
    }//GEN-LAST:event_btnDeleteActionPerformed
private void populateTable(PatientDirectory patientdirectory) {
   DefaultTableModel model = (DefaultTableModel)tblViewPatients.getModel();
    model.setRowCount(0);
    
   for(Patient patient: patientdirectory.getPatientHistory()){
                
     
       Object[] row= new Object[10];
        
       row[0]=patient.getmedicalRecordNumber();
       row[1]=patient.getFirstName();
       row[2]=patient.getLastName();
       row[3]=patient.getAge();
       row[4]=patient.getHouse().getCity().getCityName();
           
        ArrayList<Encounter> encounter= patient.getEncounterhistory().getEncounter();
        
         //System.out.println(encounter.get(encounter.size()-1).getDate().after(new Date()));
       if(encounter.get(encounter.size()-1).getDate()!=null){  
        if(encounter.get(encounter.size()-1).getDate().after(new Date())){
          
            
            Date temp = encounter.get(encounter.size()-1).getDate();
            System.out.println(temp);
            //JOptionPane.showMessageDialog(this,temp);
             row[5]= temp;
        }
       }
        
       row[6]= patient.getHouse().getCommunity().getCommunityName();
       row[7]=encounter.get(encounter.size()-1).getVitalsigns().getPulse();
       row[8]=encounter.get(encounter.size()-1).getVitalsigns().getBloodPressure();
       row[9]=encounter.get(encounter.size()-1).getVitalsigns().getTemperature();
       model.addRow(row);
 }
 }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser apptDate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblViewPatients;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCommunity;
    // End of variables declaration//GEN-END:variables

 
}
